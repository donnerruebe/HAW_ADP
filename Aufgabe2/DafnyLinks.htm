<html>
	<head>
	<meta charset='UTF-8' />
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">


<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>

<!-- morris graph lib -->
<!-- LaTeX-style equations -->
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
	</head>
	<body>
    <div class="container">
<h1 id="title">L&ouml;sungsblatt Aufgabe2</h1>
<div class="row">
			<h2>&Uuml;bungsaufgabe 2.1</h2>
			<a href="http://rise4fun.com/Dafny/y7A"> &Uuml;bungsaufgabe 2.1</a><br />
</div>
<div class="row">
			<h2>&Uuml;bungsaufgabe 2.2</h2>
            
			<a href="http://rise4fun.com/Dafny/sEoi">&Uuml;bungsaufgabe 2.2 ==&gt; Dafny</a>
            <br>
            $ f(x) = \begin{cases}
2 & n=0 \\
3*F(n-1)+2 & n>0
\end{cases}$<br>
			$F(N) =3*F(n-1)+2$<br />
			$F(N) =3*(3*F(n-2)+2)+2 = 9*F(n-2) + 6 + 2$<br />
			$F(N) =9*(3*F(n-3) + 2) + 6 + 2 = 27*F(n-3) + 18 +6 + 2$<br />
			$F(N) =3^k*F(n-k) + 3^{(k-1)}*2+3^{(k-1)}*2+...3^2*2+3^1*2+3^0*2$<br />
			$F(N) =\sum \limits_{i=0}^n i = (3^i)*2$<br />
			$F(N) =	3^{(n+1)}-1$<br />
			Rekurenzgleichung: $3^{(n+1)}-1$<br />
			
</div>
<div class="row">
			<h2>&Uuml;bungsaufgabe 2.3</h2>
			<h3> Teil 1</h3>
			<ul>
				<li>
					<h4>Algorythmus 1</h4>
					http://rise4fun.com/Dafny/QIo7
				</li>
				<ul>
					<li>
						Beschreibung:</br>
						Summiert nummerische Elemente eines Array bis zur stelle n auf.
					</li>
					<li>
						Vertrag:</br>
						Vorbedingung:
							A isArray && A[1..n] isNumber</br>
							n isInt && n >= 0 && n <= A.length</br>
						Nachbedingung:
							x ist die Summe der Elemente aus A[1..n]
					</li>
					<li>
						Laufzeit:</br>
						$O(1 + (n * 2)) $
					</li>
				</ul>
				<li>
					<h4>Algorythmus 2</h4>
					http://rise4fun.com/Dafny/Fed
				</li>
				<ul><li>
						Beschreibung:</br>
						POW (x,k) ==&gt; $x^k$
					</li>
					<li>
						Vertrag:</br>
						Vorbedingung:
							x isNumber && k isNat
						Nachbedingung:
							r ist x^k
					</li>
					<li>
						Laufzeit:</br>
						$O(1 + (n * 2))$
					</li>
				</ul>
				<li>
					<h4>Algorythmus 3</h4>
					http://rise4fun.com/Dafny/gzn<br />
					http://rise4fun.com/Dafny/GslPv
				</li>
				<ul>
					<li>
						Beschreibung:</br>
                        <ul>
						<li>array $A$ mit $1,2,3,...,n$ initialisieren;</li>
						<li>schreibe in Array $C$ eine null an jede stelle bis $n$</li>
						<li>	- zähle $j = [n...1]$ </li>
                        <li>    - Falls $A[j] > C[i]$ setze $C[i]=A[j]$</li>
						<li>Ergebnis = $C$ ist mit $n$ mal der Zahl $n$ gefüllt</li>
                        
                        </ul>
					</li>
					<li>
						Vertrag:</br>
						Vorbedingung:
							$n$ isNat
						Nachbedingung:
							$c[1..n] = n$
					</li>
					<li>
						Laufzeit:</br>
						$n + n*( 1 + n*(1)+1)$<br /> 
						$n+2*n+n^2$<br />
						$O(3*n+n**2)$
					</li>
				</ul>
			</ul>
		</div>
	</body>

</html>